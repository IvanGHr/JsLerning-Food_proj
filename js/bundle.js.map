{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACjHgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf,mBAAmB;AACnB,uBAAuB,iCAAiC,MAAM,0EAA0E,yBAAyB;AACjK;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA,aAAa;AACb,SAAS,GAAG;AACZ;AACA;AACA;AACA,wCAAwC;AACxC;AACA,gCAAgC;AAChC,uBAAuB,iCAAiC,MAAM;AAC9D,0DAA0D;AAC1D,gDAAgD;AAChD;AACA;AACA,2BAA2B,KAAK,MAAM,OAAO;AAC7C,kDAAkD,MAAM;AACxD,gDAAgD,MAAM;AACtD;AACA;AACA;AACA,0DAA0D,MAAM;AAChE;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC1FwC;AACZ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,8CAA8C;AAC9C;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAe;AACvB;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAgB;AAC5B,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC/EpB;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yDAAyD;AACzD,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACK;;;;;;;;;;;;;;;ACvD1B,iBAAiB,0EAA0E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,cAAc;AAChD,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,0CAA0C,cAAc;AACxD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC1MrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACxCnB;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC7DpB;AACA,uCAAuC;AACvC,kCAAkC;AAClC;AACA,mBAAmB;AACnB;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,4BAA4B;AAC5B;AACA;AACA,iCAAiC;AACjC;AACA;AACA,kBAAkB;AAClB,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA,4BAA4B;AAC5B;AACA;AACkB;;;;;;;UCvBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACA;AACoC;AACA;AACA;AACE;AACF;AACF;AACA;AACc;AAChD;AACA,mDAAmD;AACnD;AACA,0CAA0C,+DAAe,iCAAiC;AAC1F;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,E","sources":["webpack://server_first/./js/modules/calc.js","webpack://server_first/./js/modules/cards.js","webpack://server_first/./js/modules/forms.js","webpack://server_first/./js/modules/modal.js","webpack://server_first/./js/modules/slider.js","webpack://server_first/./js/modules/tabs.js","webpack://server_first/./js/modules/timer.js","webpack://server_first/./js/services/services.js","webpack://server_first/webpack/bootstrap","webpack://server_first/webpack/runtime/define property getters","webpack://server_first/webpack/runtime/hasOwnProperty shorthand","webpack://server_first/webpack/runtime/make namespace object","webpack://server_first/./js/script.js"],"sourcesContent":["function calc() {\r\n    //Калькуляторы - они всегда разные , так как разные вещи нужно посчитать (разные формулы)\r\n\r\n    const result = document.querySelector(\".calculating__result span\");\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'famale';\r\n        localStorage.setItem('sex', 'famale');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSetings(selector, activClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activClass);\r\n            }\r\n\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activClass);\r\n            }\r\n        });\r\n    };\r\n\r\n    initLocalSetings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSetings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____';\r\n            return;\r\n        }\r\n\r\n        if (sex === 'famale') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    };\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n    \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            \r\n            if (input.value.match(/\\D/g)) {//если в поле вводится не число\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDinamicInformation('#height');\r\n    getDinamicInformation('#weight');\r\n    getDinamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import { getResource } from \"../services/services\";\r\n\r\nfunction cards() {\r\n    //Классы //Rest \r\n\r\n    class MenuBox {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price *= this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n            \r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    //Шаблонизация для большого кол-ва карточек\r\n\r\n    //чтобы взять с сервера и отправить на сайт все наши карточки с данными\r\n    getResource('http://localhost:3000/menu')//получаем данные из сервера \r\n    .then(data => {//для того что мы получили с сервера мы определяем что это будет (data)\r\n        data.forEach(({img, altimg, title, descr, price}) => {//для полученной data - это у нас массив мы используем forEach перебор (({деструктуризация объекта}))\r\n            new MenuBox(img, altimg, title, descr, price, '.menu .container').render()//каждый объект будет вызывать конструктор MenuBox(указываем те части деструктуризированного до этого объекта, и путь куда поместить) и потсле метод render()\r\n        });\r\n    });\r\n\r\n    //библиотека axios возвращает нам более подробные данные с сервера\r\n    //для работы с библиотеками нужно тщательно читать документацию\r\n    /* axios.get('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuBox(img, altimg, title, descr, price, '.menu .container').render()\r\n            });\r\n        }); */\r\n\r\n    //это метод для небольшого кол-ва карточек, миожно 1 раз воспользоватся\r\n    /* getResource('http://localhost:3000/menu')//получаем данные из сервера \r\n        .then(data => createCard(data));//для данных которые получили мы вызвваем функцию которые принимают в себя данные полученные с сервера\r\n\r\n    function createCard(data) { //функция, которая принимает в себя данные\r\n        data.forEach(({img, altimg, title, descr, price}) => {//перебираем массив и деструктуризируем внутри массива данные в нашем случае объект\r\n            const element = document.createElement('div');//для каждого объекта(карточки) создаём элемент div\r\n            element.classList.add('menu__item');//для div добавляем класс\r\n\r\n            element.innerHTML = `\r\n                <img src=${img} alt=${altimg}>\r\n                <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n                <div class=\"menu__item-descr\">${descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n        });\r\n\r\n        document.querySelector('.menu .container').append(element);\r\n    }; */\r\n}\r\n\r\nexport default cards;","import { closeModalWindow, openModalWindow } from \"./modal\";\r\nimport { postData } from \"../services/services\";\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    //Скрипт отправки данных на сервер Формы\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо, скоро мы с вами свяжемся',\r\n        fail: 'Что-то пошло не так'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();//отменяет дефолтное взаимодействие со страницей\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            \r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n            //Для нормального взаимодействия с input в HTML нужно всегда указывать name=\"\"; иначе мы не сможем сформировать путь взаимодействия\r\n            /* request.setRequestHeader('Content-type', 'multipart/form-data'); когда используется связка XMLHttpRequest() + formData() нам не нужно устанавливать заголовок*/\r\n            //а при использовании формата json нужно указывать заголовок\r\n            const formData = new FormData(form);\r\n\r\n            //берем formData превращаем её в масив массивов => после превращаем в объект => после превразаем в JSON файл\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            /* const obj = {a: 23, b: 50};\r\n            console.log(Object.entries(obj)); */\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.fail);\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n        })\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        openModalWindow('.modal', modalTimerId);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div data-close class=\"modal__close\">&times;</div>\r\n            <div class=\"modal__title\">${message}</div>\r\n        </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModalWindow('.modal');\r\n        }, 4000);\r\n    };\r\n}\r\n\r\nexport default forms;","function openModalWindow(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.style.display = 'block';\r\n    document.body.style.overflow = 'hidden';//позволяет не скролить сайт пока открыто модальное окно\r\n\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);//убирает появление модального окна через время (таймер)\r\n    }\r\n}\r\n\r\nfunction closeModalWindow(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.style.display = 'none';\r\n    document.body.style.overflow = '';//восстанавливает скролинг страницы по дефолту\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    //Модальное окно\r\n\r\n    const modal = document.querySelector(modalSelector),\r\n          openModal = document.querySelectorAll(triggerSelector);\r\n\r\n    openModal.forEach(item => {\r\n        item.addEventListener('click', () => openModalWindow(modalSelector, modalTimerId));\r\n    });\r\n\r\n    //позволяет закрывать модальное окно, если пользователь нажал на серую зону вокруг него\r\n    modal.addEventListener('click', (event) => {\r\n        if (event.target === modal || event.target.getAttribute('data-close') == '') {\r\n            closeModalWindow(modalSelector);\r\n        }\r\n    });\r\n\r\n    //позволяет убрать модальное окно если нажать определенную кнопку (в данном случае ESC)\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.style.display === 'block') {\r\n            closeModalWindow(modalSelector);\r\n        }\r\n    });\r\n\r\n    function showModalScroll () {\r\n        //Если прокрутка ползунка сайта + контент страницы >= всему контенту (то есть если пользователь долистал сайт в самый низ)\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n            openModalWindow(modalSelector, modalTimerId);//показываем модальное окно\r\n            window.removeEventListener('scroll', showModalScroll);//после чего убираем обработчик событий\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {closeModalWindow};\r\nexport {openModalWindow};","function slider({container, slide, next, prev, totalCounter, currentCunter, wrapper, field}) {\r\n    //Слайдер\r\n\r\n    let sliderCurrent = 1;\r\n    let offset = 0;\r\n\r\n    const sliderPrev = document.querySelector(prev),\r\n          slider = document.querySelector(container),\r\n          sliderNext = document.querySelector(next),\r\n          slides = document.querySelectorAll(slide),\r\n          total = document.querySelector(totalCounter),\r\n          current = document.querySelector(currentCunter),\r\n          slidesWrapper = document.querySelector(wrapper),\r\n          slidesField = document.querySelector(field),\r\n          width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    //Слайдер по типу карусели \r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${sliderCurrent}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = sliderCurrent;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol'),\r\n          dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);//каждой точке устанавливается атрибут data-slide-to\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    function notNumbers(obj) {//функция которая принимает выражение и удаляет все не цифры\r\n        return +obj.replace(/\\D/g, '');\r\n    };\r\n\r\n    sliderNext.addEventListener('click', () => {\r\n        if (offset === notNumbers(width) * (slides.length - 1)){//witch = '500px'\r\n            offset = 0;\r\n        } else {\r\n            offset += notNumbers(width)\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (sliderCurrent == slides.length) {\r\n            sliderCurrent = 1;\r\n        } else {\r\n            sliderCurrent++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${sliderCurrent}`;\r\n        } else {\r\n            current.textContent = sliderCurrent;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[sliderCurrent - 1].style.opacity = 1;\r\n    });\r\n\r\n    sliderPrev.addEventListener('click', () => {\r\n        if (offset == 0){\r\n            (offset = notNumbers(width) * (slides.length - 1));\r\n        } else {\r\n            offset -= notNumbers(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (sliderCurrent == 1) {\r\n            sliderCurrent = slides.length;\r\n        } else {\r\n            sliderCurrent--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${sliderCurrent}`;\r\n        } else {\r\n            current.textContent = sliderCurrent;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[sliderCurrent - 1].style.opacity = 1\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            sliderCurrent = slideTo;\r\n            offset = notNumbers(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${sliderCurrent}`;\r\n            } else {\r\n                current.textContent = sliderCurrent;\r\n            }\r\n\r\n            dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[sliderCurrent - 1].style.opacity = 1;\r\n        });\r\n    });\r\n\r\n    //Слайдер простой\r\n\r\n    /* showSlide(sliderCurrent);\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n    }\r\n\r\n    function showSlide(num) {\r\n        if (num > slides.length) {\r\n            sliderCurrent = 1;\r\n        }\r\n\r\n        if (num < 1) {\r\n            sliderCurrent = slides.lenght;\r\n        }\r\n\r\n        slides.forEach(item => item.style.display = 'none');\r\n\r\n        slides[sliderCurrent - 1].style.display = 'block';\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${sliderCurrent}`;\r\n        } else {\r\n            total.textContent = sliderCurrent;\r\n        }\r\n    }\r\n\r\n    function plusSlides(n) {\r\n        showSlide(sliderCurrent += n);\r\n    }\r\n\r\n    function minusSlides(n) {\r\n        showSlide(sliderCurrent -= n);\r\n    }\r\n\r\n    sliderPrev.addEventListener('click', () => {\r\n        minusSlides(-1);\r\n    });\r\n\r\n    sliderNext.addEventListener('click', () => {\r\n        plusSlides(+1);\r\n    }); */\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    // Табы \r\n    let tabs = document.querySelectorAll(tabsSelector),\r\n\t\ttabsContent = document.querySelectorAll(tabsContentSelector),\r\n\t\ttabsParent = document.querySelector(tabsParentSelector);\r\n\r\n\tfunction hideTabContent() {\r\n        \r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n\t}\r\n\r\n\tfunction showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n    \r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n\ttabsParent.addEventListener('click', function(event) {\r\n        const target = event.target;\r\n\t\tif(target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n\t\t}\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadLine) {\r\n    //Таймер\r\n    \r\n    function getTimeRemaining (endtime) {\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endtime) - Date.parse(new Date());//получаем кол-во мс фильной точки - кол-во мс нынешнего времени\r\n              \r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)), //получаем кол-во дней до конца\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)), //получаем часы\r\n            minutes = Math.floor((t / 1000 / 60) % 60), //получаем минуты\r\n            seconds = Math.floor((t / 1000) % 60);//получаем секунды\r\n        }\r\n\r\n        return {\r\n            'total': t,//выводит точное кол-во мс которое осталось\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZeroStart(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else return num;\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);//задаем интервал обновления каждую секунду\r\n        \r\n        updateClock();//вызываем здесь функцию вывода чтобы не ждать 1 секунду пере обновлением интервала\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZeroStart(t.days);\r\n            hours.innerHTML = getZeroStart(t.hours);\r\n            minutes.innerHTML = getZeroStart(t.minutes);\r\n            seconds.innerHTML = getZeroStart(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadLine);\r\n}\r\n\r\nexport default timer;","//Создаем функцию, работы с сервером и async указывает что в функции будет асинхронный код, и там где мы ставим await - это показывает выполнение какого действия мы должны дождатся перед выполнением следующего (async await работают вместе)\r\nconst postData = async (url, data) => {//кол бек функция , которая отправляет(ссылку, и объект с которым будет работать)\r\n    const res = await fetch(url, {//создается переменная в которую помещается обработчик событий fetch(принимает ссылку, и объект в котором указываются параметры что делать с этой ссылкой)\r\n        method: 'POST',//параметр который указывает что мы делаем (отправляем, получаем...) данные с сервера\r\n        headers: { //параметр который указывает с каким форматом данных мы будем работать \r\n            'Content-type': 'application/json'//в данном случае json файлы\r\n        },\r\n        body: data //параметр указывающий что мы делаем с файлами которые получили или отправили\r\n    });\r\n\r\n    return await res.json();//а здесь мы возвращаем промис объект в формате json \r\n};\r\n\r\nasync function getResource(url) {//кол бек функция , которая получает(ссылку)\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {//Если с запросом что то не так ! - оператор не, .ok свйоство , которое проверяет fetch() и убеждается что все в порядке\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`)//throw - выкинуть , ошибку ( с текстом)\r\n    }\r\n\r\n    return await res.json();//а здесь мы возвращаем промис который будет превращать все полученные данные в js файл\r\n}\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use ctrict';\r\n\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport slider from './modules/slider';\r\nimport forms from './modules/forms';\r\nimport tabs from './modules/tabs';\r\nimport calc from './modules/calc';\r\nimport {openModalWindow} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {//!\r\n\r\n    const modalTimerId = setTimeout(() => openModalWindow('.modal', modalTimerId), 50000);//открывает модальное окно через время как открылась станица пользователем\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer('.timer', '2024-01-01');\r\n    forms('form', modalTimerId);\r\n    cards();\r\n    calc();\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        next: '.offer__slider-next',\r\n        prev: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCunter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slide-inner'\r\n    });\r\n\r\n});"],"names":[],"sourceRoot":""}